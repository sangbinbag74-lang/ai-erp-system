name: Deploy ERPNext AI System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

    - name: Test import modules
      run: |
        python -c "
        try:
            from core.database import Base
            from core.config import settings
            print('‚úÖ Core modules import successful')
        except Exception as e:
            print(f'‚ùå Import error: {e}')
            exit(1)
        "

  test-frontend:
    name: Test Frontend  
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint --if-present
      continue-on-error: true

    - name: Build application
      run: npm run build
      env:
        VITE_API_URL: https://ai-erp-system-production.up.railway.app

    - name: Test build output
      run: |
        ls -la dist/
        echo "‚úÖ Frontend build successful"

  deploy-notification:
    name: Deploy Notification
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Status
      run: |
        echo "üöÄ ERPNext AI System Deployment"
        echo "================================"
        echo "‚úÖ Backend tests passed"
        echo "‚úÖ Frontend build successful"
        echo ""
        echo "üîÑ Automatic deployments:"
        echo "‚Ä¢ Railway: ai-erp-system-production.up.railway.app"
        echo "‚Ä¢ Vercel: ai-erp-system (park-sangbins-projects)"
        echo ""
        echo "üìä Next manual steps:"
        echo "1. Check Railway dashboard for backend deployment"
        echo "2. Check Vercel dashboard for frontend deployment"  
        echo "3. Verify environment variables are set"
        echo "4. Test deployed applications"